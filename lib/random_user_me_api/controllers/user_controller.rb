# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module RandomUserMeApi
  class UserController < BaseController
    @@instance = UserController.new
    # Singleton instance of the controller class
    def self.instance
      @@instance
    end

    # Ask for a randomly generated user
    # @param [String] format Optional parameter: Format of response you want. Possible values JSON, SQL, CSV, or YAML.
    # @param [String] nat Optional parameter: Specify a nationality. i.e. gb
    # @param [Float] results Optional parameter: Specify a nationality. i.e. gb
    # @param [String] seed Optional parameter: Seeds allow you to always generate the same set of users.
    # @return UserArray response from the API call
    def get_random_user(format = nil, 
                        nat = nil, 
                        results = nil, 
                        seed = nil)

      # prepare query url
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/'
      _query_builder = APIHelper.append_url_with_query_parameters _query_builder, {
        'format' => format,
        'nat' => nat,
        'results' => results,
        'seed' => seed
      }
      _query_url = APIHelper.clean_url _query_builder

      # prepare headers
      _headers = {
        'accept' => 'application/json'
      }

      # prepare and execute HttpRequest
      _request = @http_client.get _query_url, headers: _headers
      _context = execute_request(_request)
      validate_response(_context)

      # return appropriate response type
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      return UserArray.from_hash(decoded)
    end
  end
end
