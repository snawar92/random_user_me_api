# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module RandomUserMeApi
  class StructuredPostal < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :city

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :state

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :street

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :zip

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["city"] = "city"
        @hash["state"] = "state"
        @hash["street"] = "street"
        @hash["zip"] = "zip"
      end
      @hash
    end

    def initialize(city = nil,
                   state = nil,
                   street = nil,
                   zip = nil)
      @city = city
      @state = state
      @street = street
      @zip = zip
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        city = hash["city"]
        state = hash["state"]
        street = hash["street"]
        zip = hash["zip"]

        # Create object from extracted values
        StructuredPostal.new(city,
                             state,
                             street,
                             zip)
      end
    end
  end
end
